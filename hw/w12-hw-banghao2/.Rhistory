options(scipen = 1, digits = 4, width = 80, fig.align = "center")
beta0 = -3
beta1 = 1
beta2 = 2
beta3 = 3
x1 = -1
x2 = 0.5
x3 = 0.25
log_odds = beta0 + beta1*x1 + beta2*x2 + beta3*x3
p1 = 1/(1 + exp(-log_odds))
p0 = 1 - p1
# Print results
print(paste("P[Y=0|X] =", p0))
model <- glm(am ~ mpg + hp + qsec, data = mtcars, family = binomial)
# Display model summary
summary(model)
model <- glm(am ~ mpg + hp + qsec, data = mtcars, family = binomial)
coef(model)
# Create a new data frame with the specified values
new_car <- data.frame(mpg = 19, hp = 150, qsec = 19)
# Use predict() to get the log-odds
prediction <- predict(model, newdata = new_car, type = "link")
print(prediction)
# Create a new data frame with the specified values
new_car <- data.frame(mpg = 22, hp = 123, qsec = 18)
# Convert to probability by using type="response" in predict
prob <- predict(model, newdata = new_car, type = "response")
print(prob)
# Fit full model
full_model <- glm(am ~ mpg + hp + qsec, data = mtcars, family = binomial)
# Fit null model (only intercept)
null_model <- glm(am ~ 1, data = mtcars, family = binomial)
# Perform likelihood ratio test
lr_test <- anova(null_model, full_model, test="LRT")
print(lr_test)
summary(full_model)
# Load required library
library(MASS)
# First, let's look at the data
data(Pima.tr)
data(Pima.te)
# Create the quadratic and interaction terms in the training data
X1 <- Pima.tr$glu  # glucose
X2 <- Pima.tr$ped  # diabetes pedigree function
# Fit the logistic regression model
# Note: type is already a factor in the dataset
model <- glm(type ~ glu + ped + I(glu^2) + I(ped^2) + glu:ped,
data = Pima.tr,
family = binomial)
# Get the coefficients
coef_summary <- summary(model)$coefficients
# Extract β4 (coefficient of ped^2)
beta4 <- coef_summary[5, 1]  # 5th row, 1st column contains the estimate
# Print the result
print(paste("The estimate of β4 (coefficient of ped^2) is:", round(beta4, 6)))
# Load required library
library(MASS)
# First, let's look at the data
data(Pima.tr)
data(Pima.te)
# Create the quadratic and interaction terms in the training data
X1 <- Pima.tr$glu  # glucose
X2 <- Pima.tr$ped  # diabetes pedigree function
# Fit the logistic regression model
# Note: type is already a factor in the dataset
model <- glm(type ~ glu + ped + I(glu^2) + I(ped^2) + glu:ped,
data = Pima.tr,
family = binomial)
# Get predicted probabilities for test data
pred_probs <- predict(model, newdata = Pima.te, type = "response")
# Calculate proportion of probabilities > 0.80
prop_above_80 <- mean(pred_probs > 0.80)
# Print the results
print(paste("Number of predictions > 0.80:", sum(pred_probs > 0.80)))
print(paste("Total number of test cases:", length(pred_probs)))
print(paste("Proportion of predictions > 0.80:", round(prop_above_80, 4)))
# Load required library
library(MASS)
# First, let's look at the data
data(Pima.tr)
data(Pima.te)
# Create the quadratic and interaction terms in the training data
X1 <- Pima.tr$glu  # glucose
X2 <- Pima.tr$ped  # diabetes pedigree function
# Fit the logistic regression model
# Note: type is already a factor in the dataset
model <- glm(type ~ glu + ped + I(glu^2) + I(ped^2) + glu:ped,
data = Pima.tr,
family = binomial)
# Get predicted probabilities for test data
pred_probs <- predict(model, newdata = Pima.te, type = "response")
# Calculate proportion of probabilities > 0.80
prop_above_80 <- mean(pred_probs > 0.80)
# Print the results
print(paste("Number of predictions > 0.80:", sum(pred_probs > 0.80)))
print(paste("Total number of test cases:", length(pred_probs)))
print(paste("Proportion of predictions > 0.80:", round(prop_above_80, 6)))
options(scipen = 1, digits = 4, width = 80, fig.align = "center")
# Load the mtcars dataset
data(mtcars)
# Fit the full model with all predictors
full_model <- glm(am ~ mpg + hp + qsec, data = mtcars, family = binomial)
# Fit the null model with only intercept
null_model <- glm(am ~ 1, data = mtcars, family = binomial)
# Perform likelihood ratio test
lr_test <- anova(null_model, full_model, test = "LRT")
# Print the results
print("Likelihood Ratio Test Results:")
print(lr_test)
# Extract the test statistic
test_statistic <- lr_test$Deviance[2]
cat("\nLikelihood Ratio Test Statistic:", test_statistic, "\n")
# Load the mtcars dataset
data(mtcars)
# Fit the logistic regression model
model <- glm(am ~ mpg + hp + qsec, data = mtcars, family = binomial)
# Get the model summary
model_summary <- summary(model)
# Extract the p-value for hp (β2)
hp_p_value <- coef(model_summary)["hp", "Pr(>|z|)"]
# Print detailed results
print("Model Summary:")
print(model_summary)
cat("\nWald Test p-value for hp coefficient (β2):", hp_p_value, "\n")
theo_prob_wald <- 1 - pnorm(1)
gc()
names(test_errors) = c("Model1", )
legend("lower right", legend = c("Sensitivity", "Specificity"),
col = c("blue", "red"), lty = 1)
